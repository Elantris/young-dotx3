{"version":3,"sources":["YouTubePlayer.js","App.js","registerServiceWorker.js","index.js"],"names":["YouTubePlayer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","player","_this2","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","window","onYouTubeIframeAPIReady","YT","Player","height","width","videoId","playerVars","rel","showinfo","events","onStateChange","event","data","PlayerState","ENDED","playNext","setState","prevProps","loadVideoById","react_default","a","className","id","Component","keywords","App","localStorage","clear","searchText","selectedVideo","playlist","target","value","_this3","refs","inputSearch","_this4","_this5","list","videoIndex","filter","v","title","includes","findIndex","nextVideoId","length","_this6","ref","type","placeholder","onChange","handleChangeSearch","map","i","key","concat","onClick","handleSelectKeyword","data-content","handleSelectVideo","src_YouTubePlayer","href","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1205f817.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass YouTubePlayer extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      player: {}\n    }\n  }\n\n  componentDidMount () {\n    let tag = document.createElement('script')\n    tag.src = 'https://www.youtube.com/iframe_api'\n    let firstScriptTag = document.getElementsByTagName('script')[0]\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\n\n    let player = {}\n    window.onYouTubeIframeAPIReady = () => {\n      player = new window.YT.Player('player', {\n        height: '390',\n        width: '640',\n        videoId: this.props.videoId,\n        playerVars: {\n          rel: '0',\n          showinfo: '0'\n        },\n        events: {\n          onStateChange: (event) => {\n            if (event.data === window.YT.PlayerState.ENDED) {\n              this.props.playNext()\n            }\n          }\n        }\n      })\n      this.setState({ player })\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.videoId !== prevProps.videoId) {\n      this.state.player.loadVideoById(this.props.videoId)\n    }\n  }\n\n  render () {\n    return (\n      <div className='YouTubePlayer'>\n        <div id='player' />\n      </div>\n    )\n  }\n}\n\nexport default YouTubePlayer\n","import React, { Component } from 'react'\nimport playlist from './playlist'\nimport YouTubePlayer from './YouTubePlayer'\nimport './App.css'\n\nconst keywords = [\n  '青春期五四三',\n  '馬克信箱',\n  '青春大學',\n  '青春影城',\n  'MM音樂教室'\n]\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    window.localStorage.clear()\n\n    this.state = {\n      searchText: '',\n      selectedVideo: playlist[0].id\n    }\n  }\n\n  handleChangeSearch () {\n    return event => {\n      this.setState({\n        searchText: event.target.value\n      })\n    }\n  }\n\n  handleSelectKeyword (searchText) {\n    return event => {\n      this.refs.inputSearch.value = searchText\n      this.setState({ searchText })\n    }\n  }\n\n  handleSelectVideo (videoId) {\n    return event => {\n      this.setState({\n        selectedVideo: videoId\n      })\n    }\n  }\n\n  playNext () {\n    return () => {\n      let list = []\n      if (this.state.searchText === '') {\n        list = playlist\n      } else {\n        list = playlist.filter(v => v.title.includes(this.state.searchText))\n      }\n      let videoIndex = list.findIndex(v => v.id === this.state.selectedVideo)\n      if (videoIndex !== -1) {\n        let nextVideoId = list[(videoIndex + 1) % list.length].id\n        this.setState({\n          selectedVideo: nextVideoId\n        })\n      }\n    }\n  }\n\n  render () {\n    return (\n      <div className='App container'>\n\n        <h1>青春點點點 錄音檔循環播放清單</h1>\n\n        <div className='columns mb-16'>\n          <div className='column col-5 col-lg-12'>\n            <div className='form-group mb-16'>\n              <input\n                ref='inputSearch'\n                type='text'\n                className='form-input'\n                placeholder='Search'\n                onChange={this.handleChangeSearch()}\n              />\n            </div>\n          </div>\n          <div className='column col-7 col-lg-12'>\n            {keywords.map((v, i) => (\n              <button\n                key={`keyword-${v}`}\n                className='btn mr-2'\n                onClick={this.handleSelectKeyword(v)}\n              >\n                {v}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className='divider mb-16' />\n\n        <div className='columns mb-16'>\n          <div className='column col-5 col-lg-12'>\n            <ul className='menu playlist mb-16'>\n              <li className='divider' data-content='LINKS' />\n              {playlist.map((v, i) => (\n                <li\n                  key={`video-link-${v.id}`}\n                  className={`menu-item ${this.state.searchText && !v.title.includes(this.state.searchText) ? 'd-hide' : ''}`}\n                >\n                  <a\n                    className={`c-hand ${v.id === this.state.selectedVideo ? 'active' : ''}`}\n                    onClick={this.handleSelectVideo(v.id)}\n                  >\n                    {v.title}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className='column col-7 col-lg-12'>\n            <YouTubePlayer\n              videoId={this.state.selectedVideo}\n              playNext={this.playNext()}\n            />\n          </div>\n        </div>\n\n        <div className='divider mb-16' />\n\n        <footer className='text-center'>\n          <a href='https://github.com/Elantris' target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-github' />\n            {' '}\n            Elantris\n          </a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}